import java.util.Scanner;

public class Main {

    /*
    План занятия
    1) switch
    2) Знакомство с циклами
    3) Повторение
     */

    /*
    Теория
    switch - условный оператор, который предназначен для перебора множества условий, в ситуациях, когда нужно проверить
    более 3 условий использование if-else выглядит громоздко, поэтому есть смысл заменить его switch.

    Недостатки switch:
    невозможность вычислить логическое выражение, например:
    if(age > 18 && age < 25){         - в if происходит вычисление логического выражения, аналогичная операция в switch невозможна
    System.out.println("Привет");
    }

    Конструкция switch:

    switch(переменная){

    case значение переменной:
    То что выполняем
    break;                        - прекращение выполнения блока
   .
   .  Какое-то количество case
   .
    case значение переменной:
    То что выполняем
    break;                        - прекращение выполнения блока

    default:                      - отработает, если не сработал ни один из case-ов(аналог else)
    То что выполняется
    }

    Циклы - нужны для многократного выполнения каких-либо операций
    В Java есть 3 вида циклов:
    for
    while
    do-while

    Все циклы взаимозаменяемы, т.е. цикл for можно заменить while

    Разные циклы удобно использовать для решения конкретных задач, например, цикл while удобно использовать для бесконечных
    циклов.

    Циклы управляются логическими конструкциями.

    Существует понятие главного цикла - цикл, в котором работает приложение, т.е. это бесконечный цикл, который будет закончен
    по команде пользователя. Большинство программ имеют главный цикл, а условием завершения является закрытие программы
    (нажатие на красный крестик)

    Бесконечный цикл - это цикл, который не имеет условия автоматического завершения.

    Шаг цикла(одна операция) называется итерацией.

    Конструкция цикла while:

    while(условие){
       То что будет сделано
    }
     */

    /*
    Заметки
    switch - перебор состояний имеет название - Детерминированный конечный автомат(ДКА). Такая модель широко применятся
    при решении сложных задач, которые можно свести к набору случаев. Боятся ее не стоит - достаточно уделить разбору
    параграфа пару часов и все станет ясно. ДКА подробно описаны в книге Computer Science в 5 главе.

    Главный цикл часто называется пользовательским циклом, также когда мы используем бесконечный цикл мы управляем
    пользовательским(главным) потоком.

    Циклы на английском называются loop
     */

    /*
    Задачи со звездочкой:
    1) Реализовать консольную игру "Камень, ножницы бумага" в версии человек против человека
    2) Реализовать консольную игру "Камень, ножницы бумага" в версии человек против компьютера
    3) Реализовать консольную игру "Камень, ножницы бумага" в версии компьютер против компьютера
    4) Сделать возможность выбора между режимами игры
     */

    static Scanner sc = new Scanner(System.in);
    public static void main(String[] args) {
        int a = sc.nextInt();

        switch (a){
            case 27:                                                          // Обрабатываем только то состояние, когда переменная строго равна
                System.out.println("Welcome to my house, my dear friend!");   // аналог if-а  - if(a == 27);
                break;

            case 7:
                System.out.println("not welcome");
                break;

            default:
                System.out.println("Say hello");
        }

        int b = sc.nextInt();

        switch (b){
            case 40:              // аналог if(b == 40)
                welcome();        // В этом примере вынесли операции в метод. Теперь можно использовать этот код многократно. Смотреть вызов метода welcome ниже
                break;

            case 30:
                notWelcome();
                break;

            default:
               sayHello();
        }
        System.out.println("Повторное использование метода welcome:");
        welcome();                    // Повторное использование метода

        /*
        Задача делать расчеты до тех пор пока, пользователь не захочет их прекратить
        Решение
        Необходимо использовать цикл и на каждой его итерации(шаге) спрашивать не хочет ли пользователь завершить работу приложения
         */
        calculate();
        /*
        Метод для вывода чисел от нуля до указанного диапазона
         */
        output(10);

        /*
        Задача
         Чатбот на минималках
         В бесконечном цикле в метод поступают слова(String): Привет, Как дела?, Пока
         Ответ бота: Привет -> Здравствуйте!, Как дела -> Все отлично. Хотите ли еще что-нибудь узнать? Пока -> Хорошего дня
         При вводе Пока, выходим из приложения.
         Подсказка: Для сравнения строк использовать метод equals, например:
         String str;
         str.equals("Привет")  проверит равна ли строка Привет
         Решение
         1) Создать переменную для слов пользователя и переменную для слов бота
         2) Создать бесконечный цикл while и выходить из него при вводе слова  Пока - использовать break или return
         3) Создать метод(функцию) типа String, которая будет возвращать ответ бота, она должна принимать введенную переменную
         4) Вывести ответ.
         */
    }

    public static void output(int max){
          int count = 0;                           // Счетчик итераций(шагов) цикла
          while (count<=max){                      // Пока счетчик меньше переданного числа, выводим счетчик и увеличиваем его на 1;
              System.out.println(count);           // Выводим счетчик
              count++;                             // Увеличиваем счетчик, чтобы выйти из цикла
          }
    }



    /*
    Создать метод calculate, в котором будут сначала запрашиваться два числа, затем операция, затем будет возвращен результат
    операции
    Решение
    Создать метод calculate, определить в нем switch в каждом case обрабатывать ввод, создать методы для выполнения операции
     */

    public static void calculate(){
        while (true) {                                        // Главный цикл(бесконечный) - ожидает команды пользователя на выход
            System.out.println("Желаете выйти?\n" +
                    "Да - y\n" +
                    "Нет - n");
            char exit = sc.next().charAt(0);                  // Получаем строку и берем ее первый символ
            if(exit == 'y'){
                return;                                       // return - завершает исполнение метода
            }
            System.out.println("Введите первое число: ");
            int num1 = sc.nextInt();
            System.out.println("Введите символ: ");
            char sign = sc.next().charAt(0);                  // Получаем строку и берем ее первый символ
            System.out.println("Введите второе число: ");
            int num2 = sc.nextInt();

            double res = -1;                                  // Переменную нужно инициализировать, -1 негласное значение для ошибки
            switch (sign) {
                case '+':
                    res = sum(num1, num2);
                    break;
                case '-':
                    res = sub(num1, num2);
                    break;
                case '*':
                    res = mul(num1, num2);
                    break;
                case '/':
                    res = div(num1, num2);
                    break;
            }

            System.out.println("Результат: " + num1 + " " + sign + " " + num2 + " = " + res);
            res = res * 2;                                     // Умножаем результат на 2, если использовать функцию, то можно запомнить ее результат и использовать его дальше
            System.out.println(res);
        }
    }

    public static double div(int num1, int num2){
        return (double) num1/(double) num2;             // Выполняем приведение, чтобы делились double
    }

    public static int mul(int num1, int num2){
        return num1*num2;
    }

    public static int sub(int num1, int num2){
        return num1-num2;
    }

    public static int sum(int num1, int num2){
        return num1+num2;
    }

    public static void welcome(){
        System.out.println("Welcome to my house, my dear friend!");
    }

    public static void notWelcome(){
        System.out.println("Not welcome");
    }

    public static void sayHello(){
        System.out.println("Say hello");
    }

    /*
    ДЗ со *
    Доделать Камень, ножницы, бумага
     */

    /*
    ДЗ
    1) Показать цикл while в методе, выводящий числа кратные 7 от нуля до заданого диапазона
     */
}
